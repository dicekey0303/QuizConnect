# FROM node:14-alpine
FROM --platform=linux/x86_64 node:18.19.0-slim

WORKDIR /app

RUN apt-get update && apt-get install -y \
    locales \
    python3 \
    make \
    g++ \
    && rm -rf /var/lib/apt/lists/* \
    && sed -i -e 's/# ja_JP.UTF-8 UTF-8/ja_JP.UTF-8 UTF-8/' /etc/locale.gen \
    && locale-gen \
    && update-locale LANG=ja_JP.UTF-8

ENV LANG ja_JP.UTF-8
ENV LC_ALL ja_JP.UTF-8

RUN npm install -g node-gyp

COPY backend/package*.json ./
RUN rm -rf node_modules
RUN npm ci
RUN npm install && npm install bcryptjs

COPY backend .

EXPOSE 5000

CMD ["npm", "start"]


-----
# FROM node:14-alpine
FROM --platform=linux/x86_64 node:18.19.0-slim

WORKDIR /app

RUN apt-get update && apt-get install -y \
    locales \
    && rm -rf /var/lib/apt/lists/* \
    && sed -i -e 's/# ja_JP.UTF-8 UTF-8/ja_JP.UTF-8 UTF-8/' /etc/locale.gen \
    && locale-gen \
    && update-locale LANG=ja_JP.UTF-8

ENV LANG ja_JP.UTF-8
ENV LC_ALL ja_JP.UTF-8

COPY frontend/package*.json ./
RUN rm -rf node_modules
RUN npm ci
RUN npm install

COPY frontend .

EXPOSE 3000

CMD ["npm", "start"]

-------

version: '3'

services:
  frontend:
    build:
      context: .
      dockerfile: docker/Dockerfile.frontend
    ports:
      - "3000:3000"
    volumes:
      - ./frontend:/app
      - /app/node_modules
    depends_on:
      - backend
    tty: true
    # restart: always
    # command: npm start  # この行を追加

  backend:
    build:
      context: .
      dockerfile: docker/Dockerfile.backend
    ports:
      - "5000:5000"
    volumes:
      - ./backend:/app
      - /app/node_modules
    depends_on:
      - db
    tty: true
    # restart: always
    # command: npm start  # この行を追加
    env_file:
      - .env

  db:
    image: mysql:8.0
    environment:
      MYSQL_ROOT_PASSWORD: root
    env_file:
      - .env
    volumes:
      - ./docker/mysql-data:/var/lib/mysql
